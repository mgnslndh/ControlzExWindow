<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ControlzExWindow.Themes.Styles"
                    xmlns:controls="clr-namespace:ControlzExWindow.Controls">





    <ControlTemplate x:Key="CustomWindowTemplate" TargetType="{x:Type controls:CustomWindow}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
            </AdornerDecorator>
        </Border>
    </ControlTemplate>

    <Style x:Key="CustomWindow" TargetType="{x:Type controls:CustomWindow}">
        <Setter Property="Background" Value="Beige"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Template" Value="{StaticResource CustomWindowTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Window.ResizeMode">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                                    </AdornerDecorator>
                                    <ResizeGrip IsTabStop="False" Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Window.ResizeMode" Value="{x:Static ResizeMode.CanResizeWithGrip}" />
                                        <Condition Property="Window.WindowState" Value="{x:Static WindowState.Normal}" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="UIElement.Visibility" TargetName="WindowResizeGrip">
                                        <Setter.Value>
                                            <x:Static Member="Visibility.Visible" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="ResizeMode.CanResizeWithGrip" />
                </Trigger.Value>
            </Trigger>
        </Style.Triggers>
    </Style>

    
</ResourceDictionary>