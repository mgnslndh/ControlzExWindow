<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ControlzExWindow.Themes.Styles"
                    xmlns:controls="clr-namespace:ControlzExWindow.Controls"
                    xmlns:theme="clr-namespace:ControlzExWindow.Themes">


    <Style x:Key="WindowTitleButton" TargetType="{x:Type ButtonBase}">
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
    </Style>

    <Style x:Key="WindowTitleImage" TargetType="{x:Type Image}">
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="WindowTitleTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=WindowTitleForeground}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <ControlTemplate x:Key="CustomWindowTemplate" TargetType="{x:Type controls:CustomWindow}">
        <Border
            x:Name="WindowBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border
                    Grid.Row="0"
                    Background="{theme:ThemeResource ResourceKey=WindowTitleBackground}">
                    <DockPanel LastChildFill="False">
                        <Image
                            Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                            Style="{DynamicResource WindowTitleImage}"/>
                        <TextBlock
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"
                            Style="{DynamicResource WindowTitleTextBlock}"/>
                        <Button Content="X" Style="{DynamicResource WindowTitleButton}"/>
                        <Button Content="+" Style="{DynamicResource WindowTitleButton}"/>
                        <Button Content="-" Style="{DynamicResource WindowTitleButton}"/>
                    </DockPanel>
                </Border>
                <Grid Grid.Row="1">
                    <AdornerDecorator>
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                    </AdornerDecorator>
                    <ResizeGrip IsTabStop="False" Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" />
                </Grid>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=WindowActiveBorder}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Window.ResizeMode" Value="{x:Static ResizeMode.CanResizeWithGrip}" />
                    <Condition Property="Window.WindowState" Value="{x:Static WindowState.Normal}" />
                </MultiTrigger.Conditions>
                <Setter Property="UIElement.Visibility" TargetName="WindowResizeGrip">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomWindow" TargetType="{x:Type controls:CustomWindow}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=WindowForeground}"/>
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=WindowBorder}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Template" Value="{StaticResource CustomWindowTemplate}"/>
    </Style>


</ResourceDictionary>